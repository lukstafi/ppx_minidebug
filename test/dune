(executable
 (name pp)
 (modules pp)
 (libraries ppx_minidebug ppxlib)
 (modes exe))

(rule
 (targets test_debug_sexp.actual.ml)
 (deps
  (:pp pp.exe)
  (:input test_debug_sexp.ml))
 (action
  (run ./%{pp} --impl %{input} -o %{targets})))

(rule
 (targets test_debug_pp.actual.ml)
 (deps
  (:pp pp.exe)
  (:input test_debug_pp.ml))
 (action
  (run ./%{pp} --impl %{input} -o %{targets})))

(rule
 (targets test_debug_show.actual.ml)
 (deps
  (:pp pp.exe)
  (:input test_debug_show.ml))
 (action
  (run ./%{pp} --impl %{input} -o %{targets})))

(rule
 (targets test_debug_unannot_bindings.actual.ml)
 (deps
  (:pp pp.exe)
  (:input test_debug_unannot_bindings.ml))
 (action
  (run ./%{pp} --impl %{input} -o %{targets})))

(rule
 (targets test_debug_interrupts.actual.ml)
 (deps
  (:pp pp.exe)
  (:input test_debug_interrupts.ml))
 (action
  (run ./%{pp} --impl %{input} -o %{targets})))

(rule
 (targets test_debug_log_nothing.actual.ml)
 (deps
  (:pp pp.exe)
  (:input test_debug_log_nothing.ml))
 (action
  (run ./%{pp} --impl %{input} -o %{targets})))

(rule
 (targets test_debug_log_prefixed.actual.ml)
 (deps
  (:pp pp.exe)
  (:input test_debug_log_prefixed.ml))
 (action
  (run ./%{pp} --impl %{input} -o %{targets})))

(rule
 (targets test_debug_log_level_consistency.actual.ml)
 (deps
  (:pp pp.exe)
  (:input test_debug_log_level_consistency.ml))
 (action
  (setenv
   PPX_MINIDEBUG_TEST_LOG_LEVEL_CONSISTENCY
   9
   (run ./%{pp} --impl %{input} -o %{targets}))))

(rule
 (alias runtest)
 (action
  (diff test_debug_sexp.expected.ml test_debug_sexp.actual.ml)))

(rule
 (alias runtest)
 (action
  (diff test_debug_pp.expected.ml test_debug_pp.actual.ml)))

(rule
 (alias runtest)
 (action
  (diff test_debug_show.expected.ml test_debug_show.actual.ml)))

(rule
 (alias runtest)
 (action
  (diff
   test_debug_unannot_bindings.expected.ml
   test_debug_unannot_bindings.actual.ml)))

(rule
 (alias runtest)
 (action
  (diff test_debug_interrupts.expected.ml test_debug_interrupts.actual.ml)))

(rule
 (alias runtest)
 (action
  (diff test_debug_log_nothing.expected.ml test_debug_log_nothing.actual.ml)))

(rule
 (alias runtest)
 (action
  (diff
   test_debug_log_prefixed.expected.ml
   test_debug_log_prefixed.actual.ml)))

(rule
 (alias runtest)
 (action
  (diff
   test_debug_log_level_consistency.expected.ml
   test_debug_log_level_consistency.actual.ml)))

(executable
 (name test_debug_sexp)
 (modules test_debug_sexp)
 (libraries sexplib0 minidebug_db)
 (modes exe)
 (preprocess
  (pps ppx_minidebug ppx_sexp_conv)))

(rule
 (targets debugger_sexp.db debugger_sexp.log)
 (deps ../bin/minidebug_view.exe)
 (action
  (progn
   (run %{dep:test_debug_sexp.exe})
   (with-stdout-to debugger_sexp.log
    (run %{dep:../bin/minidebug_view.exe} debugger_sexp.db show)))))

(rule
 (alias runtest)
 (action
  (diff debugger_sexp.expected.log debugger_sexp.log)))

(executable
 (name test_debug_pp)
 (modules test_debug_pp)
 (libraries minidebug_db)
 (modes exe)
 (preprocess
  (pps ppx_minidebug ppx_deriving.show)))

(rule
 (targets debugger_pp.db debugger_pp.log)
 (deps ../bin/minidebug_view.exe)
 (action
  (progn
   (run %{dep:test_debug_pp.exe})
   (with-stdout-to debugger_pp.log
    (run %{dep:../bin/minidebug_view.exe} debugger_pp.db show)))))

(rule
 (alias runtest)
 (action
  (diff debugger_pp.expected.log debugger_pp.log)))

(executable
 (name test_debug_show)
 (modules test_debug_show)
 (libraries minidebug_db)
 (modes exe)
 (preprocess
  (pps ppx_minidebug ppx_deriving.show)))

(rule
 (targets debugger_show.db debugger_show.log)
 (deps ../bin/minidebug_view.exe)
 (action
  (progn
   (run %{dep:test_debug_show.exe})
   (with-stdout-to debugger_show.log
    (run %{dep:../bin/minidebug_view.exe} debugger_show.db show)))))

(rule
 (alias runtest)
 (action
  (diff debugger_show.expected.log debugger_show.log)))

(executable
 (name test_debug_unannot_bindings)
 (modules test_debug_unannot_bindings)
 (libraries minidebug_runtime)
 (modes exe)
 (preprocess
  (pps ppx_minidebug ppx_deriving.show)))

(executable
 (name test_debug_interrupts)
 (modules test_debug_interrupts)
 (libraries minidebug_db)
 (modes exe)
 (preprocess
  (pps ppx_minidebug ppx_deriving.show)))

(rule
 (targets debugger_interrupts.db debugger_interrupts.log)
 (deps ../bin/minidebug_view.exe)
 (action
  (progn
   (run %{dep:test_debug_interrupts.exe})
   (with-stdout-to debugger_interrupts.log
    (run %{dep:../bin/minidebug_view.exe} debugger_interrupts.db show)))))

(rule
 (alias runtest)
 (action
  (diff debugger_interrupts.expected.log debugger_interrupts.log)))

(executable
 (name test_debug_log_nothing)
 (modules test_debug_log_nothing)
 (libraries minidebug_runtime)
 (modes exe)
 (preprocess
  (pps ppx_minidebug ppx_deriving.show)))

(test
 (name test_debug_generate_nothing)
 (modules test_debug_generate_nothing)
 (libraries minidebug_runtime)
 (modes exe)
 (preprocess
  (pps ppx_minidebug ppx_deriving.show)))

(executable
 (name test_debug_log_prefixed)
 (modules test_debug_log_prefixed)
 (libraries minidebug_runtime)
 (modes exe)
 (preprocess
  (pps ppx_minidebug ppx_deriving.show)))



(executable
 (name test_debug_html)
 (modules test_debug_html)
 (libraries sexplib0 minidebug_runtime)
 (modes exe)
 (preprocess
  (pps ppx_minidebug ppx_sexp_conv)))

(executable
 (name test_debug_md)
 (modules test_debug_md)
 (libraries sexplib0 minidebug_runtime)
 (modes exe)
 (preprocess
  (pps ppx_minidebug ppx_sexp_conv)))

(executable
 (name test_debug_time_spans)
 (modules test_debug_time_spans)
 (libraries sexplib0 minidebug_runtime)
 (modes exe)
 (preprocess
  (pps ppx_minidebug ppx_sexp_conv)))

(executable
 (name test_debug_multifile)
 (modules test_debug_multifile)
 (libraries sexplib0 minidebug_runtime)
 (modes exe)
 (preprocess
  (pps ppx_minidebug ppx_sexp_conv)))

(rule
 (targets debugger_sexp_html.html debugger_sexp_html-toc.html)
 ;  (mode
 ;   (promote (until-clean)))
 (action
  (run %{dep:test_debug_html.exe})))

(rule
 (target debugger_sexp_md.md)
 (action
  (run %{dep:test_debug_md.exe})))

(rule
 (target debugger_sexp_time_spans.md)
 (action
  (run %{dep:test_debug_time_spans.exe})))

(rule
 (targets debugger_multifile_1.md debugger_multifile_2.md)
 (enabled_if
  (= %{system} linux))
 (action
  (progn
   (run %{dep:test_debug_multifile.exe})
   (system "cp -f debugger_multifile/1.md debugger_multifile_1.md")
   (system "cp -f debugger_multifile/2.md debugger_multifile_2.md"))))

(rule
 (alias runtest)
 (action
  (diff debugger_sexp_html.expected.html debugger_sexp_html.html)))

(rule
 (alias runtest)
 (action
  (diff debugger_sexp_html-toc.expected.html debugger_sexp_html-toc.html)))

(rule
 (alias runtest)
 (action
  (diff debugger_sexp_md.expected.md debugger_sexp_md.md)))

; For illustration purposes.
; (rule
;  (alias runtest)
;  (action
;   (diff debugger_sexp_time_spans.expected.md debugger_sexp_time_spans.md)))

(rule
 (alias runtest)
 (enabled_if
  (= %{system} linux))
 (action
  (diff debugger_multifile_1.expected.md debugger_multifile_1.md)))

(rule
 (alias runtest)
 (enabled_if
  (= %{system} linux))
 (action
  (diff debugger_multifile_2.expected.md debugger_multifile_2.md)))

(library
 (name test_inline_tests)
 (inline_tests)
 (modules test_expect_test)
 (libraries minidebug_runtime str)
 (preprocess
  (pps ppx_minidebug ppx_deriving.show ppx_sexp_conv ppx_expect)))

(executable
 (name test_debug_diffs)
 (modules test_debug_diffs)
 (libraries sexplib0 minidebug_runtime)
 (modes exe)
 (preprocess
  (pps ppx_minidebug ppx_sexp_conv)))

(rule
 (targets debugger_diffs_run1.raw debugger_diffs_run1.log)
 (action
  (run %{dep:test_debug_diffs.exe} run1)))

(rule
 (target debugger_diffs_run2.log)
 (deps debugger_diffs_run1.raw)
 (action
  (run %{dep:test_debug_diffs.exe} run2)))

(rule
 (alias runtest)
 (action
  (diff debugger_diffs_run1.expected.log debugger_diffs_run1.log)))

(rule
 (alias runtest)
 (action
  (diff debugger_diffs_run2.expected.log debugger_diffs_run2.log)))

(executable
 (name test_debug_timestamps)
 (modules test_debug_timestamps)
 (libraries minidebug_runtime re)
 (modes exe)
 (preprocess
  (pps ppx_minidebug ppx_deriving.show)))

(rule
 (targets debugger_timestamps_run1.raw debugger_timestamps_run1.log)
 (action
  (run %{dep:test_debug_timestamps.exe} run1)))

(rule
 (target debugger_timestamps_run2.log)
 (deps debugger_timestamps_run1.raw)
 (action
  (run %{dep:test_debug_timestamps.exe} run2)))

(rule
 (alias runtest)
 (action
  (diff debugger_timestamps_run1.expected.log debugger_timestamps_run1.log)))

(rule
 (alias runtest)
 (action
  (diff debugger_timestamps_run2.expected.log debugger_timestamps_run2.log)))

(executable
 (name test_debug_large_diffs)
 (modules test_debug_large_diffs)
 (libraries minidebug_runtime re sexplib0)
 (modes exe)
 (preprocess
  (pps ppx_minidebug ppx_sexp_conv)))

(rule
 (alias runtest)
 (targets
  debugger_large_diffs_run1.log
  debugger_large_diffs_run2.log
  debugger_large_diffs_run3.log)
 (action
  (run %{dep:test_debug_large_diffs.exe})))

(rule
 (alias runtest)
 (action
  (diff debugger_large_diffs_run1.expected.log debugger_large_diffs_run1.log)))

(rule
 (alias runtest)
 (action
  (diff debugger_large_diffs_run2.expected.log debugger_large_diffs_run2.log)))

(rule
 (alias runtest)
 (action
  (diff debugger_large_diffs_run3.expected.log debugger_large_diffs_run3.log)))

(executable
 (name debug_diffs_align)
 (modules debug_diffs_align)
 (libraries minidebug_runtime)
 (modes exe)
 (preprocess
  (pps ppx_minidebug ppx_deriving.show)))

(executable
 (name test_debug_multithread_files)
 (modules test_debug_multithread_files)
 (libraries minidebug_runtime threads)
 (modes exe)
 (preprocess
  (pps ppx_minidebug ppx_deriving.show)))

(rule
 (targets
  debugger_multithread_files-1.log
  debugger_multithread_files-2.log
  debugger_multithread_files-3.log)
 (action
  (run %{dep:test_debug_multithread_files.exe})))

(rule
 (alias runtest)
 (action
  (diff
   debugger_multithread_files-1.expected.log
   debugger_multithread_files-1.log)))

(rule
 (alias runtest)
 (action
  (diff
   debugger_multithread_files-2.expected.log
   debugger_multithread_files-2.log)))

(rule
 (alias runtest)
 (action
  (diff
   debugger_multithread_files-3.expected.log
   debugger_multithread_files-3.log)))

(executable
 (name test_debug_multithread_stdout)
 (modules test_debug_multithread_stdout)
 (libraries minidebug_runtime threads)
 (modes exe)
 (preprocess
  (pps ppx_minidebug ppx_deriving.show)))

(rule
 (target debugger_multithread_stdout.log)
 (action
  (with-stdout-to
   %{target}
   (run %{dep:test_debug_multithread_stdout.exe}))))

(rule
 (alias runtest)
 (action
  (diff
   debugger_multithread_stdout.expected.log
   debugger_multithread_stdout.log)))

(test
 (name test_path_filter)
 (modules test_path_filter)
 (libraries sexplib0 minidebug_runtime re)
 (preprocess
  (pps ppx_minidebug ppx_deriving.show)))

(executable
 (name test_db_backend)
 (modules test_db_backend)
 (libraries sexplib0 minidebug_db)
 (modes exe)
 (preprocess
  (pps ppx_minidebug ppx_sexp_conv)))
