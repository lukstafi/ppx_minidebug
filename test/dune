(executable
 (name pp)
 (modules pp)
 (libraries ppx_minidebug ppxlib)
 (modes exe))

(rule
 (targets test_debug_sexp.actual.ml)
 (deps
  (:pp pp.exe)
  (:input test_debug_sexp.ml))
 (action
  (run ./%{pp} --impl %{input} -o %{targets})))

(rule
 (targets test_debug_pp.actual.ml)
 (deps
  (:pp pp.exe)
  (:input test_debug_pp.ml))
 (action
  (run ./%{pp} --impl %{input} -o %{targets})))

(rule
 (targets test_debug_show.actual.ml)
 (deps
  (:pp pp.exe)
  (:input test_debug_show.ml))
 (action
  (run ./%{pp} --impl %{input} -o %{targets})))

(rule
 (targets test_debug_interrupts.actual.ml)
 (deps
  (:pp pp.exe)
  (:input test_debug_interrupts.ml))
 (action
  (run ./%{pp} --impl %{input} -o %{targets})))

(rule
 (alias runtest)
 (action
  (diff test_debug_sexp.expected.ml test_debug_sexp.actual.ml)))

(rule
 (alias runtest)
 (action
  (diff test_debug_pp.expected.ml test_debug_pp.actual.ml)))

(rule
 (alias runtest)
 (action
  (diff test_debug_show.expected.ml test_debug_show.actual.ml)))

(rule
 (alias runtest)
 (action
  (diff test_debug_interrupts.expected.ml test_debug_interrupts.actual.ml)))

(executable
 (name test_debug_sexp)
 (modules test_debug_sexp)
 (libraries sexplib0 minidebug_runtime)
 (modes exe)
 (preprocess
  (pps ppx_minidebug ppx_sexp_conv)))

(rule
 (target debugger_sexp_printbox.log)
 (action
  (run %{dep:test_debug_sexp.exe})))

(rule
 (alias runtest)
 (action
  (diff debugger_sexp_printbox.expected.log debugger_sexp_printbox.log)))

(executable
 (name test_debug_pp)
 (modules test_debug_pp)
 (libraries minidebug_runtime)
 (modes exe)
 (preprocess
  (pps ppx_minidebug ppx_deriving.show)))

(rule
 (target debugger_pp_format.log)
 (action
  (run %{dep:test_debug_pp.exe})))

(rule
 (alias runtest)
 (action
  (diff debugger_pp_format.expected.log debugger_pp_format.log)))

(executable
 (name test_debug_show)
 (modules test_debug_show)
 (libraries minidebug_runtime)
 (modes exe)
 (preprocess
  (pps ppx_minidebug ppx_deriving.show)))

(executable
 (name test_debug_interrupts)
 (modules test_debug_interrupts)
 (libraries minidebug_runtime)
 (modes exe)
 (preprocess
  (pps ppx_minidebug ppx_deriving.show)))

(rule
 (target debugger_show_flushing.log)
 (action
  (run %{dep:test_debug_show.exe})))

(rule
 (alias runtest)
 (action
  (diff debugger_show_flushing.expected.log debugger_show_flushing.log)))

(rule
 (target debugger_show_interrupts.log)
 (action
  (run %{dep:test_debug_interrupts.exe})))

(rule
 (alias runtest)
 (action
  (diff debugger_show_interrupts.expected.log debugger_show_interrupts.log)))

(executable
 (name test_debug_html)
 (modules test_debug_html)
 (libraries sexplib0 minidebug_runtime)
 (modes exe)
 (preprocess
  (pps ppx_minidebug ppx_sexp_conv)))

(executable
 (name test_debug_md)
 (modules test_debug_md)
 (libraries sexplib0 minidebug_runtime)
 (modes exe)
 (preprocess
  (pps ppx_minidebug ppx_sexp_conv)))

(executable
 (name test_debug_time_spans)
 (modules test_debug_time_spans)
 (libraries sexplib0 minidebug_runtime)
 (modes exe)
 (preprocess
  (pps ppx_minidebug ppx_sexp_conv)))

(executable
 (name test_debug_multifile)
 (modules test_debug_multifile)
 (libraries sexplib0 minidebug_runtime)
 (modes exe)
 (preprocess
  (pps ppx_minidebug ppx_sexp_conv)))

(rule
 (target debugger_sexp_html.html)
 (action
  (run %{dep:test_debug_html.exe})))

(rule
 (target debugger_sexp_md.md)
 (action
  (run %{dep:test_debug_md.exe})))

(rule
 (target debugger_sexp_time_spans.md)
 (action
  (run %{dep:test_debug_time_spans.exe})))

(rule
 (targets debugger_multifile_1.md debugger_multifile_2.md)
 (enabled_if
  (= %{system} linux))
 (action
  (progn
   (run %{dep:test_debug_multifile.exe})
   (system "cp -f debugger_multifile/1.md debugger_multifile_1.md")
   (system "cp -f debugger_multifile/2.md debugger_multifile_2.md"))))

(rule
 (alias runtest)
 (action
  (diff debugger_sexp_html.expected.html debugger_sexp_html.html)))

(rule
 (alias runtest)
 (action
  (diff debugger_sexp_md.expected.md debugger_sexp_md.md)))

; For illustration purposes.
; (rule
;  (alias runtest)
;  (action
;   (diff debugger_sexp_time_spans.expected.md debugger_sexp_time_spans.md)))

(rule
 (alias runtest)
 (action
  (diff debugger_sexp_time_spans.expected.md debugger_sexp_time_spans.md)))

(rule
 (alias runtest)
 (enabled_if
  (= %{system} linux))
 (action
  (diff debugger_multifile_1.expected.md debugger_multifile_1.md)))

(rule
 (alias runtest)
 (enabled_if
  (= %{system} linux))
 (action
  (diff debugger_multifile_2.expected.md debugger_multifile_2.md)))

(library
 (name test_inline_tests)
 (inline_tests)
 (modules test_expect_test)
 (libraries minidebug_runtime str)
 (preprocess
  (pps ppx_minidebug ppx_deriving.show ppx_sexp_conv ppx_expect)))
